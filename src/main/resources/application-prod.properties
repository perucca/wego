#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
server.servlet.contextPath=/api/
#logging.level.org.hibernate.SQL=debug

 

spring.mail.host=in-v3.mailjet.com
spring.mail.port=587
spring.mail.username=3c291903654d18b2df912b60c06db5f9
spring.mail.password=82ea631f76bd6e505b686d26d3ef54d1
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url=jdbc:mysql://db:3306/wego
spring.datasource.username=admin
spring.datasource.password=password

#spring.datasource.url = jdbc:mysql://mysql.istic.univ-rennes1.fr:3306/base_mperucca
#spring.datasource.username = user_mperucca
#spring.datasource.password = mysqlmichel

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

